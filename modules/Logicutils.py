from discord.ext import commands
from discord import app_commands, Embed, Colour, Interaction, Message
from modules.utils import webhandler


class Logicutils(commands.Cog, name="Logicutils"):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="votetop", description="Get the top voters")
    async def votetop_command(self, interaction: Interaction):
        await interaction.response.send_message("Loading...")
        await interaction.edit_original_response(content="", embed=self.get_vote_top())

    @app_commands.command(name="serverstat", description="Server status")
    async def serverstat_command(self, interaction: Interaction):
        await interaction.response.send_message("Loading...")
        await interaction.edit_original_response(content="", embeds=[self.get_game_servers_status(),
                                                   self.get_infrastructure_status()])
    
    def get_vote_top(self) -> Embed:
        spisok = webhandler.get_json(
            'https://logixy.net/launcher/tableTopVote.php?mode=api')
        title = "üèÜ –¢–æ–ø –≥–æ–ª–æ—Å—É—é—â–∏—Ö"
        if(spisok is False):
            text = '–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å API: ' + webhandler.req_error
        else:
            text = ""
            i = 0
            for userdata in spisok:
                text += f"**{str(i + 1)}** . **" + userdata['user'].replace('_', '\\_').title(
                ) + "** - **" + userdata['ammount'] + "**\n"
                i += 1
        return Embed(title=title, description=text, color=Colour.brand_green())

    def get_game_servers_status(self) -> Embed:
        spisok = webhandler.get_json('https://logixy.net/monAJAX/cache/cache.json')
        title = "üéÆ –°—Ç–∞—Ç—É—Å –∏–≥—Ä–æ–≤—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤"
        if(spisok is False):
            text = '–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è API –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–æ–≤ –∏–≥—Ä–æ–≤—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤: ' + webhandler.req_error
        else:
            text = ''
            for s_name in spisok['servers']:
                s_data = spisok['servers'][s_name]
                if (s_data['status'] == 'online'):
                    stat_e = ':green_circle:'
                    if (s_data['ping'] > 300):
                        stat_e = ':yellow_circle:'
                    if (s_data['ping'] > 350):
                        stat_e = ':orange_circle:'
                    if (s_data['ping'] > 450):
                        stat_e = ':brown_circle:'
                    text += stat_e + "**" + s_name + "** - (" + str(s_data['online']) + "/" + str(
                        s_data['slots']) + ") (" + str(s_data['ping']) + "ms)\n"
                else:
                    text += ":red_circle:**" + s_name + \
                        "** - (**" + s_data['status'] + "**)" + "\n"
            text += "\n**–û–±—â–∏–π –æ–Ω–ª–∞–π–Ω:** " + \
                str(spisok['online']) + "/" + str(spisok['slots']) + "\n"
            text += "**–†–µ–∫–æ—Ä–¥ –¥–Ω—è:** " + \
                str(spisok['recordday']) + \
                " (" + spisok['timerecday'] + ")\n"
            text += "**–†–µ–∫–æ—Ä–¥:** " + \
                str(spisok['record']) + " (" + spisok['timerec'] + ")\n"
        return Embed(title=title, description=text, color=Colour.brand_green())
    
    def get_infrastructure_status(self) -> Embed:
        title = "‚öôÔ∏è –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è"
        servers_stats = webhandler.get_json('https://status.logixy.net/api')
        errors_data = {
            'Server \#1': '–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω —Å–µ—Ä–≤–µ—Ä #1! C–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –Ω–µ—Ç —ç–Ω–µ—Ä–≥–æ–æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –ª–∏–±–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.',
            'CDN': '–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≥–ª–∞–≤–Ω—ã–π CDN. –ú–æ–∂–µ—Ç –Ω–∞–±–ª—é–¥–∞—Ç—å—Å—è –Ω–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤.',
            'Server \#2': '–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω —Å–µ—Ä–≤–µ—Ä #2! C–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –Ω–µ—Ç —ç–Ω–µ—Ä–≥–æ–æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –ª–∏–±–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.',
            'Radio': '–ù–∞–±–ª—é–¥–∞—é—Ç—Å—è –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–∞–¥–∏–æ-—Å–µ—Ä–≤–µ—Ä–æ–º. –ü—Ä–∏–¥–µ—Ç—Å—è –ø–æ—Å–∏–¥–µ—Ç—å –≤ —Ç–∏—à–∏–Ω–µ. –ï–≥–æ –≤–æ–æ–±—â–µ –∫—Ç–æ-—Ç–æ —Å–ª—É—à–∞–µ—Ç?!',
            'Launch-server': '–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ª–∞—É–Ω—á-—Å–µ—Ä–≤–µ—Ä –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω. –í–µ—Å—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ª–∞—É–Ω—á–µ—Ä–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.'
        }
        err_data = ''
        text = ''
        for server in servers_stats:
            if (server['available'] != 'Online'):
                stat_e = ':red_circle:'
                if (server['name'] in errors_data):
                    err_data += ":exclamation: " + errors_data[server['name']] + "\n"
            else:
                stat_e = ':green_circle:'
            text += stat_e + "**" + \
                server['name'] + "** - " + server['available'] + "\n"
        text += "\n" + err_data + "\n–°—Ç—Ä–∞–Ω–∏—Ü–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–µ–∫—Ç–∞ <https://status.logixy.net/>"
        return Embed(title=title, description=text, color=Colour.brand_green())
    
    @commands.Cog.listener("on_message")
    async def chat_message(self, message: Message):
        if (message.author.bot):
            return
        
        message_text = message.content
        lowered_message = message_text.lower()

        if lowered_message in ['—Ç–æ–ø –≥–æ–ª–æ—Å—É—é—â–∏—Ö', '—Ç–æ–ø –≥–æ–ª–æ—Å–æ–≤', '—Ç–æ–ø –≥–æ–ª–æ—Å–æ–≤–∞–≤—à–∏—Ö']: 
            await message.reply(embed=self.get_vote_top())

        if lowered_message in ['—Å—Ç–∞—Ç—É—Å—Å–µ—Ä–≤–µ—Ä–æ–≤', '—Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–æ–≤', '—Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞', 'server stat', '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞']:
            await message.reply(embeds=[self.get_game_servers_status(),
                                       self.get_infrastructure_status()])

async def setup(bot):
    await bot.add_cog(Logicutils(bot))